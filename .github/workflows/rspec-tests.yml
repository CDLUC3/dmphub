name: RSpec Tests

on: [push]

jobs:
  mysql:
    runs-on: ubuntu-latest

    env:
      DB_ADAPTER: mysql2
      MYSQL_PWD: root
      RAILS_ENV: test

    steps:
    # Checkout the repo
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - name: 'Install  MySQL Packages'
      run: |
        sudo apt-get update
        sudo apt-get install -y mysql-client libmysqlclient-dev

    - name: 'Determine Ruby and Bundler Versions from Gemfile.lock'
      run: |
        echo "RUBY_VERSION=`cat ./Gemfile.lock | grep -A 1 'RUBY VERSION' | grep 'ruby' | grep -oE '[0-9]\.[0-9]'`" >> $GITHUB_ENV
        echo "BUNDLER_VERSION=`cat ./Gemfile.lock | grep -A 1 'BUNDLED WITH' | grep -oE '[0-9]\.[0-9]'`" >> $GITHUB_ENV

    - name: 'Install Ruby'
      uses: actions/setup-ruby@v1
      with:
        ruby-version: ${{ env.RUBY_VERSION }}

    # Try to retrieve the gems from the cache
    - name: 'Cache Gems'
      uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gem-

    - name: 'Bundle Install'
      run: |
        gem install bundler -v ${{ env.BUNDLER_VERSION }}
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3 --without pgsql rollbar aws

    - name: 'Setup Credentials'
      run: |
        # generate a default credential file and key
        EDITOR='echo "$(cat config/credentials.yml.example)" >' bundle exec rails credentials:edit

    # Try to retrieve the yarn JS dependencies from the cache
    - name: 'Cache Yarn Packages'
      uses: actions/cache@v1
      with:
        path: node_modules/
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-yarn-
          ${{ runner.os }}-

    - name: 'Yarn Install'
      run: |
        yarn install

    - name: 'Start MySQL'
      run: sudo systemctl start mysql

    - name: 'Setup Test DB'
      run: bin/rails db:setup RAILS_ENV=test

    - name: 'Migrate DB'
      run: bin/rails db:migrate RAILS_ENV=test

    - name: 'Run Rspec Tests'
      run: bin/bundle exec rspec spec/
